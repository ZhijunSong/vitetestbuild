import {
  useColor
} from "./chunk-4KWW2QG6.js";
import {
  convertToUnit,
  getCurrentInstanceName,
  propsFactory
} from "./chunk-WIAOD35H.js";
import {
  Fragment,
  computed,
  createVNode,
  unref
} from "./chunk-2JUOC7J6.js";

// node_modules/vuetify/lib/composables/dimensions.mjs
var makeDimensionProps = propsFactory({
  height: [Number, String],
  maxHeight: [Number, String],
  maxWidth: [Number, String],
  minHeight: [Number, String],
  minWidth: [Number, String],
  width: [Number, String]
}, "dimension");
function useDimension(props) {
  const dimensionStyles = computed(() => ({
    height: convertToUnit(props.height),
    maxHeight: convertToUnit(props.maxHeight),
    maxWidth: convertToUnit(props.maxWidth),
    minHeight: convertToUnit(props.minHeight),
    minWidth: convertToUnit(props.minWidth),
    width: convertToUnit(props.width)
  }));
  return {
    dimensionStyles
  };
}

// node_modules/vuetify/lib/composables/variant.mjs
var allowedVariants = ["outlined", "plain", "text", "contained", "contained-flat", "contained-text"];
function genOverlays(isClickable, name) {
  return createVNode(Fragment, null, [isClickable && createVNode("div", {
    "class": `${name}__overlay`
  }, null), createVNode("div", {
    "class": `${name}__underlay`
  }, null)]);
}
var makeVariantProps = propsFactory({
  color: String,
  variant: {
    type: String,
    default: "contained",
    validator: (v) => allowedVariants.includes(v)
  }
}, "variant");
function useVariant(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  const variantClasses = computed(() => {
    const {
      variant
    } = unref(props);
    return `${name}--variant-${variant}`;
  });
  const {
    colorClasses,
    colorStyles
  } = useColor(computed(() => {
    const {
      variant,
      color
    } = unref(props);
    return {
      [["contained", "contained-flat"].includes(variant) ? "background" : "text"]: color
    };
  }));
  return {
    colorClasses,
    colorStyles,
    variantClasses
  };
}

export {
  makeDimensionProps,
  useDimension,
  genOverlays,
  makeVariantProps,
  useVariant
};
//# sourceMappingURL=chunk-6NL2UBPX.js.map
