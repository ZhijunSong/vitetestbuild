{
  "version": 3,
  "sources": ["../../vuetify/src/composables/display.ts"],
  "sourcesContent": ["// Utilities\nimport { inject, reactive, ref, toRefs, watchEffect } from 'vue'\nimport { mergeDeep } from '@/util'\n\n// Globals\nimport { IN_BROWSER, SUPPORTS_TOUCH } from '@/util/globals'\n\n// Types\nimport type { InjectionKey, ToRefs } from 'vue'\n\nexport type DisplayBreakpoint = keyof DisplayThresholds\n\nexport interface DisplayThresholds {\n  xs: number\n  sm: number\n  md: number\n  lg: number\n  xl: number\n  xxl: number\n}\n\nexport interface DisplayOptions {\n  mobileBreakpoint?: number | DisplayBreakpoint\n  thresholds?: Partial<DisplayThresholds>\n}\n\nexport interface InternalDisplayOptions {\n  mobileBreakpoint: number | DisplayBreakpoint\n  thresholds: DisplayThresholds\n}\n\nexport interface DisplayPlatform {\n  android: boolean\n  ios: boolean\n  cordova: boolean\n  electron: boolean\n  chrome: boolean\n  edge: boolean\n  firefox: boolean\n  opera: boolean\n  win: boolean\n  mac: boolean\n  linux: boolean\n  touch: boolean\n  ssr: boolean\n}\n\nexport interface DisplayInstance {\n  xs: boolean\n  sm: boolean\n  md: boolean\n  lg: boolean\n  xl: boolean\n  xxl: boolean\n  smAndUp: boolean\n  mdAndUp: boolean\n  lgAndUp: boolean\n  xlAndUp: boolean\n  smAndDown: boolean\n  mdAndDown: boolean\n  lgAndDown: boolean\n  xlAndDown: boolean\n  name: DisplayBreakpoint\n  height: number\n  width: number\n  mobile: boolean\n  mobileBreakpoint: number | DisplayBreakpoint\n  platform: DisplayPlatform\n  thresholds: DisplayThresholds\n}\n\nexport const DisplaySymbol: InjectionKey<ToRefs<DisplayInstance>> = Symbol.for('vuetify:display')\n\nconst defaultDisplayOptions: DisplayOptions = {\n  mobileBreakpoint: 'lg',\n  thresholds: {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920,\n    xxl: 2560,\n  },\n}\n\nconst parseDisplayOptions = (options: DisplayOptions = defaultDisplayOptions) => {\n  return mergeDeep(defaultDisplayOptions, options) as InternalDisplayOptions\n}\n\n// Cross-browser support as described in:\n// https://stackoverflow.com/questions/1248081\nfunction getClientWidth () {\n  return IN_BROWSER ? Math.max(\n    document.documentElement!.clientWidth,\n    window.innerWidth\n  ) : 0 // SSR\n}\n\nfunction getClientHeight () {\n  return IN_BROWSER ? Math.max(\n    document.documentElement!.clientHeight,\n    window.innerHeight\n  ) : 0 // SSR\n}\n\nfunction getPlatform (): DisplayPlatform {\n  const userAgent = IN_BROWSER ? window.navigator.userAgent : 'ssr'\n\n  function match (regexp: RegExp) {\n    return Boolean(userAgent.match(regexp))\n  }\n\n  const android = match(/android/i)\n  const ios = match(/iphone|ipad|ipod/i)\n  const cordova = match(/cordova/i)\n  const electron = match(/electron/i)\n  const chrome = match(/chrome/i)\n  const edge = match(/edge/i)\n  const firefox = match(/firefox/i)\n  const opera = match(/opera/i)\n  const win = match(/win/i)\n  const mac = match(/mac/i)\n  const linux = match(/linux/i)\n  const ssr = match(/ssr/i)\n\n  return {\n    android,\n    ios,\n    cordova,\n    electron,\n    chrome,\n    edge,\n    firefox,\n    opera,\n    win,\n    mac,\n    linux,\n    touch: SUPPORTS_TOUCH,\n    ssr,\n  }\n}\n\nexport function createDisplay (options?: DisplayOptions): ToRefs<DisplayInstance> {\n  const { thresholds, mobileBreakpoint } = parseDisplayOptions(options)\n\n  const height = ref(getClientHeight())\n  const platform = getPlatform()\n  const state = reactive({} as DisplayInstance)\n  const width = ref(getClientWidth())\n\n  function onResize () {\n    height.value = getClientHeight()\n    width.value = getClientWidth()\n  }\n\n  // eslint-disable-next-line max-statements\n  watchEffect(() => {\n    const xs = width.value < thresholds.sm\n    const sm = width.value < thresholds.md && !xs\n    const md = width.value < thresholds.lg && !(sm || xs)\n    const lg = width.value < thresholds.xl && !(md || sm || xs)\n    const xl = width.value < thresholds.xxl && !(lg || md || sm || xs)\n    const xxl = width.value >= thresholds.xxl\n    const name =\n      xs ? 'xs'\n      : sm ? 'sm'\n      : md ? 'md'\n      : lg ? 'lg'\n      : xl ? 'xl'\n      : 'xxl'\n    const breakpointValue = typeof mobileBreakpoint === 'number' ? mobileBreakpoint : thresholds[mobileBreakpoint]\n    const mobile = !platform.ssr\n      ? width.value < breakpointValue\n      : platform.android || platform.ios || platform.opera\n\n    state.xs = xs\n    state.sm = sm\n    state.md = md\n    state.lg = lg\n    state.xl = xl\n    state.xxl = xxl\n    state.smAndUp = !xs\n    state.mdAndUp = !(xs || sm)\n    state.lgAndUp = !(xs || sm || md)\n    state.xlAndUp = !(xs || sm || md || lg)\n    state.smAndDown = !(md || lg || xl || xxl)\n    state.mdAndDown = !(lg || xl || xxl)\n    state.lgAndDown = !(xl || xxl)\n    state.xlAndDown = !xxl\n    state.name = name\n    state.height = height.value\n    state.width = width.value\n    state.mobile = mobile\n    state.mobileBreakpoint = mobileBreakpoint\n    state.platform = platform\n    state.thresholds = thresholds\n  })\n\n  if (IN_BROWSER) {\n    window.addEventListener('resize', onResize, { passive: true })\n  }\n\n  return toRefs(state)\n}\n\nexport function useDisplay () {\n  const display = inject(DisplaySymbol)\n\n  if (!display) throw new Error('Could not find Vuetify display injection')\n\n  return display\n}\n"],
  "mappings": "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",
  "names": []
}
