import {
  getCurrentInstance,
  propsFactory
} from "./chunk-WIAOD35H.js";
import {
  computed,
  resolveDynamicComponent,
  toRef
} from "./chunk-2JUOC7J6.js";
import {
  __spreadProps,
  __spreadValues
} from "./chunk-AWPMEBIP.js";

// node_modules/vuetify/lib/composables/router.mjs
function useRouter() {
  var _getCurrentInstance, _getCurrentInstance$p;
  return (_getCurrentInstance = getCurrentInstance("useRouter")) == null ? void 0 : (_getCurrentInstance$p = _getCurrentInstance.proxy) == null ? void 0 : _getCurrentInstance$p.$router;
}
function useLink(props, attrs) {
  const RouterLink = resolveDynamicComponent("RouterLink");
  const isLink = computed(() => !!(props.href || props.to));
  const isClickable = computed(() => {
    return (isLink == null ? void 0 : isLink.value) || !!(attrs.onClick || attrs.onClickOnce);
  });
  if (typeof RouterLink === "string") {
    return {
      isLink,
      isClickable,
      href: toRef(props, "href")
    };
  }
  const link = props.to ? RouterLink.useLink(props) : void 0;
  return __spreadProps(__spreadValues({}, link), {
    isLink,
    isClickable,
    href: computed(() => props.to ? link == null ? void 0 : link.route.value.href : props.href)
  });
}
var makeRouterProps = propsFactory({
  href: String,
  replace: Boolean,
  to: [String, Object]
}, "router");

export {
  useRouter,
  useLink,
  makeRouterProps
};
//# sourceMappingURL=chunk-HXFSV6BR.js.map
