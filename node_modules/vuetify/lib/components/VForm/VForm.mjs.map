{"version":3,"sources":["../../../src/components/VForm/VForm.tsx"],"names":["createForm","makeFormProps","ref","defineComponent","useRender","VForm","name","props","emits","val","submit","e","setup","slots","emit","form","formRef","onReset","preventDefault","reset","onSubmit","validate","then","valid","default"],"mappings":";AAAA;SACSA,U,EAAYC,a,sCAErB;;AACA,SAASC,GAAT,QAAoB,KAApB;SACSC,e,EAAiBC,S;AAE1B,OAAO,MAAMC,KAAK,GAAGF,eAAe,CAAC;AACnCG,EAAAA,IAAI,EAAE,OAD6B;AAGnCC,EAAAA,KAAK,EAAE,EACL,GAAGN,aAAa;AADX,GAH4B;AAOnCO,EAAAA,KAAK,EAAE;AACL,yBAAsBC,GAAD,IAAyB,IADzC;AAELC,IAAAA,MAAM,EAAGC,CAAD,IAAc;AAFjB,GAP4B;;AAYnCC,EAAAA,KAAK,CAAEL,KAAF,QAA0B;AAAA,QAAjB;AAAEM,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAiB;AAC7B,UAAMC,IAAI,GAAGf,UAAU,CAACO,KAAD,CAAvB;AACA,UAAMS,OAAO,GAAGd,GAAG,EAAnB;;AAEA,aAASe,OAAT,CAAkBN,CAAlB,EAA4B;AAC1BA,MAAAA,CAAC,CAACO,cAAF;AACAH,MAAAA,IAAI,CAACI,KAAL;AACD;;AAED,aAASC,QAAT,CAAmBT,CAAnB,EAA6B;AAC3BA,MAAAA,CAAC,CAACO,cAAF;AACAH,MAAAA,IAAI,CAACM,QAAL,GAAgBC,IAAhB,CAAqB,SAAe;AAAA,YAAd;AAAEC,UAAAA;AAAF,SAAc;;AAClC,YAAIA,KAAJ,EAAW;AACTT,UAAAA,IAAI,CAAC,QAAD,EAAWH,CAAX,CAAJ;AACD;AACF,OAJD;AAKD;;AAEDP,IAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA,eAEAY,OAFA;AAAA,iBAGA,QAHA;AAAA;AAAA,mBAKIC,OALJ;AAAA,oBAMKG;AANL,4BAQJP,KAAK,CAACW,OARF,qBAQJ,oBAAAX,KAAK,EAAWE,IAAX,CARD;AAAA,KAAD,CAAT;AAYA,WAAOA,IAAP;AACD;;AA3CkC,CAAD,CAA7B","sourcesContent":["// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\n\n// Utilities\nimport { ref } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VForm = defineComponent({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: Event) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (e: Event) {\n      e.preventDefault()\n      form.validate().then(({ valid }) => {\n        if (valid) {\n          emit('submit', e)\n        }\n      })\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return form\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"],"file":"VForm.mjs"}