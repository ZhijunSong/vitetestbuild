{"version":3,"sources":["../../../src/components/VBtn/VBtn.tsx"],"names":["VBtnToggleSymbol","VIcon","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","useSelectLink","Ripple","computed","defineComponent","VBtn","name","directives","props","symbol","type","default","flat","Boolean","icon","String","prependIcon","appendIcon","block","stacked","ripple","tag","variant","setup","attrs","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","positionClasses","positionStyles","roundedClasses","sizeClasses","group","link","isDisabled","disabled","value","isElevated","border","select","Tag","isLink","hasColor","isSelected","undefined","selectedClass","isExactActive","href","e","navigate","toggle","size"],"mappings":"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","sourcesContent":["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String],\n    prependIcon: String,\n    appendIcon: String,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'contained' && !(props.disabled || props.flat || props.border)\n    })\n\n    useSelectLink(link, group?.select)\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !group || group.isSelected.value\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': link.isExactActive?.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && props.prependIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.prependIcon }\n              start\n            />\n          ) }\n\n          { typeof props.icon === 'boolean'\n            ? slots.default?.()\n            : (\n              <VIcon\n                class=\"v-btn__icon\"\n                icon={ props.icon }\n                size={ props.size }\n              />\n            )\n          }\n\n          { !props.icon && props.appendIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.appendIcon }\n              end\n            />\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n"],"file":"VBtn.mjs"}