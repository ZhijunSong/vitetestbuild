{"version":3,"sources":["../../../src/components/VAutocomplete/VAutocomplete.tsx"],"names":["genItem","makeSelectProps","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeFilterProps","useFilter","makeTransitionProps","useForwardRef","useLocale","useProxiedModel","computed","nextTick","ref","watch","genericComponent","useRender","wrapInArray","highlightResult","text","matches","length","Array","isArray","Error","substr","VAutocomplete","name","props","search","String","filterKeys","transition","emits","e","val","setup","slots","t","vTextFieldRef","activator","isFocused","isPristine","menu","items","map","model","v","multiple","filteredItems","value","undefined","selections","array","index","unwrapped","item","found","find","selection","push","selected","onClear","openOnClear","onClickControl","hideNoData","onKeydown","includes","key","onAfterLeave","isSelecting","select","findIndex","filter","title","$el","querySelector","hasChips","chips","chip","menuIcon","default","eager","noDataText","preventDefault","onChipClose","stopPropagation","slotProps","modelValue","closable","closableChips","size"],"mappings":";AAAA;AACA,6B,CAEA;;SACSA,O,EAASC,e;SACTC,K;SACAC,iB;SACAC,K,EAAOC,S;SACPC,K;SACAC,U,mCAET;;SACSC,e,EAAiBC,S;SACjBC,mB;SACAC,a;SACAC,S;SACAC,e,8CAET;;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,GAA7B,EAAkCC,KAAlC,QAA+C,KAA/C;SACSC,gB,EAAkBC,S,EAAWC,W,gCAEtC;;AAaA,SAASC,eAAT,CAA0BC,IAA1B,EAAwCC,OAAxC,EAA8DC,MAA9D,EAA8E;AAC5E,MAAIC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;AAE5B,SAAO,OAAOJ,OAAP,KAAmB,QAAnB,IAA+B,CAACA,OAAhC;AAAA,aAGW;AAHX,MAGsCD,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeL,OAAf,CAHtC;AAAA,aAIW;AAJX,MAIoCD,IAAI,CAACM,MAAL,CAAYL,OAAZ,EAAqBC,MAArB,CAJpC;AAAA,aAKW;AALX,MAKsCF,IAAI,CAACM,MAAL,CAAYL,OAAO,GAAGC,MAAtB,CALtC,OAQHF,IARJ;AASD;;AAED,OAAO,MAAMO,aAAa,GAAGX,gBAAgB,GAMxC;AACHY,EAAAA,IAAI,EAAE,eADH;AAGHC,EAAAA,KAAK,EAAE;AACL;AACA;AACAC,IAAAA,MAAM,EAAEC,MAHH;AAKL,OAAGzB,eAAe,CAAC;AAAE0B,MAAAA,UAAU,EAAE,CAAC,OAAD;AAAd,KAAD,CALb;AAML,OAAGjC,eAAe,EANb;AAOL,OAAGS,mBAAmB,CAAC;AAAEyB,MAAAA,UAAU,EAAE;AAAd,KAAD;AAPjB,GAHJ;AAaHC,EAAAA,KAAK,EAAE;AACL,mBAAgBC,CAAD,IAAmB,IAD7B;AAEL,qBAAkBC,GAAD,IAAc,IAF1B;AAGL,yBAAsBA,GAAD,IAAc;AAH9B,GAbJ;;AAmBHC,EAAAA,KAAK,CAAER,KAAF,QAAoB;AAAA,QAAX;AAAES,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAQ7B,SAAS,EAAvB;AACA,UAAM8B,aAAa,GAAG1B,GAAG,EAAzB;AACA,UAAM2B,SAAS,GAAG3B,GAAG,EAArB;AACA,UAAM4B,SAAS,GAAG5B,GAAG,CAAC,KAAD,CAArB;AACA,UAAM6B,UAAU,GAAG7B,GAAG,CAAC,IAAD,CAAtB;AACA,UAAM8B,IAAI,GAAG9B,GAAG,CAAC,KAAD,CAAhB;AACA,UAAM+B,KAAK,GAAGjC,QAAQ,CAAC,MAAMiB,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgBhD,OAAhB,CAAP,CAAtB;AACA,UAAMgC,MAAM,GAAGnB,eAAe,CAACkB,KAAD,EAAQ,QAAR,EAAkB,EAAlB,CAA9B;AACA,UAAMkB,KAAK,GAAGpC,eAAe,CAC3BkB,KAD2B,EAE3B,YAF2B,EAG3B,EAH2B,EAI3BmB,CAAC,IAAI9B,WAAW,CAAC8B,CAAC,IAAI,EAAN,CAJW,EAK1BA,CAAD,IAAYnB,KAAK,CAACoB,QAAN,GAAiBD,CAAjB,GAAqBA,CAAC,CAAC,CAAD,CALP,CAA7B;AAOA,UAAM;AAAEE,MAAAA;AAAF,QAAoB3C,SAAS,CAACsB,KAAD,EAAQgB,KAAR,EAAejC,QAAQ,CAAC,MAAM+B,UAAU,CAACQ,KAAX,GAAmBC,SAAnB,GAA+BtB,MAAM,CAACqB,KAA7C,CAAvB,CAAnC;AACA,UAAME,UAAU,GAAGzC,QAAQ,CAAC,MAAM;AAChC,YAAM0C,KAA2B,GAAG,EAApC;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,MAAMC,SAAX,IAAwBT,KAAK,CAACI,KAA9B,EAAqC;AACnC,cAAMM,IAAI,GAAG3D,OAAO,CAAC0D,SAAD,CAApB;AAEA,cAAME,KAAK,GAAGJ,KAAK,CAACK,IAAN,CAAWC,SAAS,IAAIA,SAAS,CAACT,KAAV,KAAoBM,IAAI,CAACN,KAAjD,CAAd;;AAEA,YAAIO,KAAK,IAAI,IAAb,EAAmB;AACjBJ,UAAAA,KAAK,CAACO,IAAN,CAAW,EACT,GAAGJ,IADM;AAETF,YAAAA;AAFS,WAAX;AAKAA,UAAAA,KAAK;AACN;AACF;;AAED,aAAOD,KAAP;AACD,KAnB0B,CAA3B;AAoBA,UAAMQ,QAAQ,GAAGlD,QAAQ,CAAC,MAAMyC,UAAU,CAACF,KAAX,CAAiBL,GAAjB,CAAqBc,SAAS,IAAIA,SAAS,CAACT,KAA5C,CAAP,CAAzB;;AAEA,aAASY,OAAT,CAAkB5B,CAAlB,EAAiC;AAC/BY,MAAAA,KAAK,CAACI,KAAN,GAAc,EAAd;;AAEA,UAAItB,KAAK,CAACmC,WAAV,EAAuB;AACrBpB,QAAAA,IAAI,CAACO,KAAL,GAAa,IAAb;AACD;;AAEDrB,MAAAA,MAAM,CAACqB,KAAP,GAAe,EAAf;AACD;;AACD,aAASc,cAAT,GAA2B;AACzB,UAAIpC,KAAK,CAACqC,UAAN,IAAoB,CAAChB,aAAa,CAACC,KAAd,CAAoB7B,MAA7C,EAAqD;AAErDsB,MAAAA,IAAI,CAACO,KAAL,GAAa,IAAb;AACD;;AACD,aAASgB,SAAT,CAAoBhC,CAApB,EAAsC;AACpC,UAAI,CAAC,OAAD,EAAU,WAAV,EAAuBiC,QAAvB,CAAgCjC,CAAC,CAACkC,GAAlC,CAAJ,EAA4C;AAC1CzB,QAAAA,IAAI,CAACO,KAAL,GAAa,IAAb;AACD;;AAED,UAAI,CAAC,QAAD,EAAWiB,QAAX,CAAoBjC,CAAC,CAACkC,GAAtB,CAAJ,EAAgC;AAC9BzB,QAAAA,IAAI,CAACO,KAAL,GAAa,KAAb;AACD;;AAED,UAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2BiB,QAA3B,CAAoCjC,CAAC,CAACkC,GAAtC,CAAJ,EAAgD;AAC9C1B,QAAAA,UAAU,CAACQ,KAAX,GAAmB,IAAnB;AACD;AACF;;AACD,aAASmB,YAAT,GAAyB;AACvB,UAAI5B,SAAS,CAACS,KAAd,EAAqBR,UAAU,CAACQ,KAAX,GAAmB,IAAnB;AACtB;;AACD,UAAMoB,WAAW,GAAGzD,GAAG,CAAC,KAAD,CAAvB;;AACA,aAAS0D,MAAT,CAAiBf,IAAjB,EAA4B;AAC1B,UAAI5B,KAAK,CAACoB,QAAV,EAAoB;AAClB,cAAMM,KAAK,GAAGF,UAAU,CAACF,KAAX,CAAiBsB,SAAjB,CAA2Bb,SAAS,IAAIA,SAAS,CAACT,KAAV,KAAoBM,IAAI,CAACN,KAAjE,CAAd;;AAEA,YAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBR,UAAAA,KAAK,CAACI,KAAN,CAAYU,IAAZ,CAAiBJ,IAAI,CAACN,KAAtB;AACD,SAFD,MAEO;AACLJ,UAAAA,KAAK,CAACI,KAAN,GAAcW,QAAQ,CAACX,KAAT,CAAeuB,MAAf,CAAsBd,SAAS,IAAIA,SAAS,KAAKH,IAAI,CAACN,KAAtD,CAAd;AACD;AACF,OARD,MAQO;AACLJ,QAAAA,KAAK,CAACI,KAAN,GAAc,CAACM,IAAI,CAACN,KAAN,CAAd;AAEAoB,QAAAA,WAAW,CAACpB,KAAZ,GAAoB,IAApB;AAEArB,QAAAA,MAAM,CAACqB,KAAP,GAAeM,IAAI,CAACkB,KAApB;AACA/B,QAAAA,IAAI,CAACO,KAAL,GAAa,KAAb;AACAR,QAAAA,UAAU,CAACQ,KAAX,GAAmB,IAAnB;AAEAtC,QAAAA,QAAQ,CAAC,MAAO0D,WAAW,CAACpB,KAAZ,GAAoB,KAA5B,CAAR;AACD;AACF;;AAEDpC,IAAAA,KAAK,CAAC,MAAMyB,aAAa,CAACW,KAArB,EAA4Bf,GAAG,IAAI;AACtCK,MAAAA,SAAS,CAACU,KAAV,GAAkBf,GAAG,CAACwC,GAAJ,CAAQC,aAAR,CAAsB,mBAAtB,CAAlB;AACD,KAFI,CAAL;AAIA9D,IAAAA,KAAK,CAAC2B,SAAD,EAAYN,GAAG,IAAI;AACtB,UAAIA,GAAJ,EAAS;AAAA;;AACPmC,QAAAA,WAAW,CAACpB,KAAZ,GAAoB,IAApB;AACArB,QAAAA,MAAM,CAACqB,KAAP,GAAetB,KAAK,CAACoB,QAAN,GAAiB,EAAjB,GAAsBlB,MAAM,iBAACgB,KAAK,CAACI,KAAP,2BAAgB,EAAhB,CAA3C;AACAR,QAAAA,UAAU,CAACQ,KAAX,GAAmB,IAAnB;AAEAtC,QAAAA,QAAQ,CAAC,MAAM0D,WAAW,CAACpB,KAAZ,GAAoB,KAA3B,CAAR;AACD,OAND,MAMO;AACLP,QAAAA,IAAI,CAACO,KAAL,GAAa,KAAb;AACArB,QAAAA,MAAM,CAACqB,KAAP,GAAe,EAAf;AACD;AACF,KAXI,CAAL;AAaApC,IAAAA,KAAK,CAACe,MAAD,EAASM,GAAG,IAAI;AACnB,UAAI,CAACM,SAAS,CAACS,KAAX,IAAoBoB,WAAW,CAACpB,KAApC,EAA2C;AAE3C,UAAIf,GAAJ,EAASQ,IAAI,CAACO,KAAL,GAAa,IAAb;AAETR,MAAAA,UAAU,CAACQ,KAAX,GAAmB,CAACf,GAApB;AACD,KANI,CAAL;AAQAnB,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM6D,QAAQ,GAAG,CAAC,EAAEjD,KAAK,CAACkD,KAAN,IAAezC,KAAK,CAAC0C,IAAvB,CAAlB;AAEA;AAAA,eAEUxC,aAFV;AAAA,sBAGcV,MAAM,CAACqB,KAHrB;AAAA,yCAGcrB,MAAM,CAACqB,KAHrB;AAAA,iBAIW,CACL,gBADK,EAEL;AACE,yCAA+BP,IAAI,CAACO,KADtC;AAEE,mCAAyB,CAAC,CAACtB,KAAK,CAACkD,KAFnC;AAGE,WAAE,mBAAkBlD,KAAK,CAACoB,QAAN,GAAiB,UAAjB,GAA8B,QAAS,EAA3D,GAA+D;AAHjE,SAFK,CAJX;AAAA,2BAYsBpB,KAAK,CAACoD,QAZ5B;AAAA,iBAaYnB,QAAQ,CAACX,KAAT,CAAe7B,MAAf,GAAwB,CAbpC;AAAA,yBAcoByC,OAdpB;AAAA,2BAesBE,cAftB;AAAA,yBAgBoBA,cAhBpB;AAAA,mBAiBc,MAAMvB,SAAS,CAACS,KAAV,GAAkB,IAjBtC;AAAA,kBAkBa,MAAMT,SAAS,CAACS,KAAV,GAAkB,KAlBrC;AAAA,qBAmBgBgB;AAnBhB,WAsBM,GAAG7B,KAtBT;AAuBM4C,QAAAA,OAAO,EAAE,qCAEHzC,SAAS,CAACU,KAAV;AAAA,wBAEYP,IAAI,CAACO,KAFjB;AAAA,2CAEYP,IAAI,CAACO,KAFjB;AAAA,uBAGcV,SAAS,CAACU,KAHxB;AAAA,0BAIe,yBAJf;AAAA,mBAKUtB,KAAK,CAACsD,KALhB;AAAA,yBAMgB,KANhB;AAAA,wBAOetD,KAAK,CAACI,UAPrB;AAAA,0BAQiBqC;AARjB;AAAA;AAAA,wBAWeR,QAAQ,CAACX,KAXxB;AAAA,8BAYqBtB,KAAK,CAACoB,QAAN,GAAiB,aAAjB,GAAiC;AAZtD;AAAA,4BAcM,CAACC,aAAa,CAACC,KAAd,CAAoB7B,MAArB,IAA+B,CAACO,KAAK,CAACqC,UAAtC;AAAA,uBACmB3B,CAAC,CAACV,KAAK,CAACuD,UAAP;AADpB,oBAdN,EAkBMlC,aAAa,CAACC,KAAd,CAAoBL,GAApB,CAAwB;AAAA,kBAAC;AAAEW,gBAAAA,IAAF;AAAQpC,gBAAAA;AAAR,eAAD;AAAA;AAAA,yBAEdoC,IAAI,CAACN,KAFS;AAAA,+BAGPhB,CAAD,IAAmBA,CAAC,CAACkD,cAAF,EAHX;AAAA,2BAIZ,MAAMb,MAAM,CAACf,IAAD;AAJA;AAOpBkB,gBAAAA,KAAK,EAAE,MAAM;AAAA;;AACX,yBAAOhC,UAAU,CAACQ,KAAX,GACHM,IAAI,CAACkB,KADF,GAEHxD,eAAe,CAACsC,IAAI,CAACkB,KAAN,EAAatD,OAAO,CAACsD,KAArB,2CAA4B7C,MAAM,CAACqB,KAAnC,qBAA4B,cAAc7B,MAA1C,mCAAoD,CAApD,CAFnB;AAGD;AAXmB;AAAA,aAAxB,CAlBN;AAAA;AAAA,UAFG,EAsCD+B,UAAU,CAACF,KAAX,CAAiBL,GAAjB,CAAqB,CAACc,SAAD,EAAYL,KAAZ,KAAsB;AAC3C,mBAAS+B,WAAT,CAAsBnD,CAAtB,EAAgC;AAC9BA,YAAAA,CAAC,CAACoD,eAAF;AACApD,YAAAA,CAAC,CAACkD,cAAF;AAEAb,YAAAA,MAAM,CAACZ,SAAD,CAAN;AACD;;AAED,gBAAM4B,SAAS,GAAG;AAChB,6BAAiBF,WADD;AAEhBG,YAAAA,UAAU,EAAE;AAFI,WAAlB;AAKA;AAAA,qBACa;AADb,cAEMX,QAAQ;AAAA,wBAEI;AACR9E,cAAAA,KAAK,EAAE;AACL0F,gBAAAA,QAAQ,EAAE7D,KAAK,CAAC8D,aADX;AAELC,gBAAAA,IAAI,EAAE,OAFD;AAGLxE,gBAAAA,IAAI,EAAEwC,SAAS,CAACe;AAHX;AADC;AAFJ;AAAA,4BAUJrC,KAAK,CAAC0C,IAAN,GACE1C,KAAK,CAAC0C,IAAN,CAAW;AAAEnD,cAAAA,KAAK,EAAE2D,SAAT;AAAoB5B,cAAAA;AAApB,aAAX,CADF,uBAEe4B,SAFf,OAVI;AAAA,YAFd,EAmBM,CAACV,QAAD,KACAxC,KAAK,CAACsB,SAAN,GACItB,KAAK,CAACsB,SAAN,CAAgB;AAAEA,YAAAA;AAAF,WAAhB,CADJ;AAAA,qBAGgB;AAHhB,cAIQA,SAAS,CAACe,KAJlB,EAKQ9C,KAAK,CAACoB,QAAN,IAAmBM,KAAK,GAAGF,UAAU,CAACF,KAAX,CAAiB7B,MAAjB,GAA0B,CAArD;AAAA,qBACY;AADZ,qCALR,EADA,CAnBN;AAiCD,SA9CC,CAtCC;AAvBf;AAiHD,KApHQ,CAAT;AAsHA,WAAOb,aAAa,CAAC;AACnByC,MAAAA;AADmB,KAAD,EAEjBV,aAFiB,CAApB;AAGD;;AAjQE,CANwC,CAAtC","sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { genItem, makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { genericComponent, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { DefaultChipSlot, InternalSelectItem } from '@/components/VSelect/VSelect'\nimport type { MakeSlots } from '@/util'\n\nexport interface InternalAutocompleteItem extends InternalSelectItem {\n\n}\n\nexport interface DefaultAutocompleteSlot {\n  selection: InternalAutocompleteItem\n}\n\nfunction highlightResult (text: string, matches: FilterMatch, length: number) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\nexport const VAutocomplete = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [DefaultAutocompleteSlot]\n  }>\n}>()({\n  name: 'VAutocomplete',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const menu = ref(false)\n    const items = computed(() => props.items.map(genItem))\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v || []),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const { filteredItems } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n    const selections = computed(() => {\n      const array: InternalSelectItem[] = []\n      let index = 0\n      for (const unwrapped of model.value) {\n        const item = genItem(unwrapped)\n\n        const found = array.find(selection => selection.value === item.value)\n\n        if (found == null) {\n          array.push({\n            ...item,\n            index,\n          })\n\n          index++\n        }\n      }\n\n      return array\n    })\n    const selected = computed(() => selections.value.map(selection => selection.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onClickControl () {\n      if (props.hideNoData && !filteredItems.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    const isSelecting = ref(false)\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selections.value.findIndex(selection => selection.value === item.value)\n\n        if (index === -1) {\n          model.value.push(item.value)\n        } else {\n          model.value = selected.value.filter(selection => selection !== item.value)\n        }\n      } else {\n        model.value = [item.value]\n\n        isSelecting.value = true\n\n        search.value = item.title\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(model.value ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        menu.value = false\n        search.value = ''\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          v-model={ search.value }\n          class={[\n            'v-autocomplete',\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          dirty={ selected.value.length > 0 }\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onClick:input={ onClickControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-autocomplete__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                    onAfterLeave={ onAfterLeave }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !filteredItems.value.length && !props.hideNoData && (\n                        <VListItem title={ t(props.noDataText) } />\n                      ) }\n\n                      { filteredItems.value.map(({ item, matches }) => (\n                        <VListItem\n                          value={ item.value }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, matches.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n                  { selections.value.map((selection, index) => {\n                    function onChipClose (e: Event) {\n                      e.stopPropagation()\n                      e.preventDefault()\n\n                      select(selection)\n                    }\n\n                    const slotProps = {\n                      'onClick:close': onChipClose,\n                      modelValue: true,\n                    }\n\n                    return (\n                      <div class=\"v-autocomplete__selection\">\n                        { hasChips && (\n                          <VDefaultsProvider\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: selection.title,\n                              },\n                            }}\n                          >\n                            { slots.chip\n                              ? slots.chip({ props: slotProps, selection })\n                              : (<VChip { ...slotProps } />)\n                            }\n                          </VDefaultsProvider>\n                        ) }\n\n                        { !hasChips && (\n                          slots.selection\n                            ? slots.selection({ selection })\n                            : (\n                              <span class=\"v-autocomplete__selection-text\">\n                                { selection.title }\n                                { props.multiple && (index < selections.value.length - 1) && (\n                                  <span class=\"v-autocomplete__selection-comma\">,</span>\n                                ) }\n                              </span>\n                            )\n                        ) }\n                      </div>\n                    )\n                  }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({\n      filteredItems,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n"],"file":"VAutocomplete.mjs"}