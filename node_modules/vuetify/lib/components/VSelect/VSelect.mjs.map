{"version":3,"sources":["../../../src/components/VSelect/VSelect.tsx"],"names":["VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeTransitionProps","useForwardRef","useLocale","useProxiedModel","computed","ref","watch","genericComponent","propsFactory","useRender","wrapInArray","genItem","item","title","String","value","makeSelectProps","chips","Boolean","closableChips","eager","hideNoData","hideSelected","items","type","Array","default","menuIcon","modelValue","Number","multiple","noDataText","openOnClear","VSelect","name","props","transition","emits","val","setup","slots","t","vTextFieldRef","activator","menu","map","model","v","selections","filter","includes","selected","selection","onClear","e","onClickControl","length","onKeydown","key","select","index","findIndex","push","$el","querySelector","hasChips","chip","join","preventDefault","onChipClose","stopPropagation","slotProps","closable","size","text"],"mappings":"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","sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, ref, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { LinkProps } from '@/composables/router'\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport interface InternalSelectItem {\n  title: string\n  value: any\n  index: number\n}\n\nexport interface DefaultSelectionSlot {\n  selection: InternalSelectItem\n}\n\nexport interface DefaultChipSlot extends DefaultSelectionSlot {\n  props: {\n    'onClick:close': (e: Event) => void\n    modelValue: any\n  }\n}\n\nexport type SelectItem = string | (string | number)[] | ((item: Record<string, any>, fallback?: any) => any) | (LinkProps & {\n  text: string\n})\n\nexport function genItem (item: any) {\n  return {\n    title: String((typeof item === 'object' ? item.title : item) ?? ''),\n    value: (typeof item === 'object' ? item.value : item),\n  }\n}\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  items: {\n    type: Array as PropType<SelectItem[]>,\n    default: () => ([]),\n  },\n  menuIcon: {\n    type: String,\n    default: '$dropdown',\n  },\n  modelValue: {\n    type: [Number, String, Array],\n    default: () => ([]),\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n}, 'select')\n\nexport const VSelect = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [DefaultSelectionSlot]\n  }>\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: 'scale-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const menu = ref(false)\n    const items = computed(() => props.items.map(genItem))\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const selections = computed(() => items.value.filter(item => model.value.includes(item.value)))\n    const selected = computed(() => selections.value.map(selection => selection.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (props.hideNoData && !items.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n    }\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selections.value.findIndex(selection => selection.value === item.value)\n\n        if (index === -1) {\n          model.value.push(item.value)\n        } else {\n          model.value = selected.value.filter(selection => selection !== item.value)\n        }\n      } else {\n        model.value = [item.value]\n        menu.value = false\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onClick:input={ onClickControl }\n          onClick:control={ onClickControl }\n          onBlur={ () => menu.value = false }\n          modelValue={ model.value.join(', ') }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-select__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !items.value.length && !props.hideNoData && (\n                        <VListItem title={ t(props.noDataText) } />\n                      ) }\n\n                      { items.value.map(item => (\n                        <VListItem\n                          title={ item.title }\n                          value={ item.value }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        />\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n\n                { selections.value.map((selection, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(selection)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                  }\n\n                  return (\n                    <div class=\"v-select__selection\">\n                      { hasChips && (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: selection.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ props: slotProps, selection })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) }\n\n                      { !hasChips && (\n                        slots.selection\n                          ? slots.selection({ selection })\n                          : (\n                            <span class=\"v-select__selection-text\">\n                              { selection.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({}, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"file":"VSelect.mjs"}